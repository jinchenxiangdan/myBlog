{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{236:function(e,t,a){\"use strict\";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"寻找两个升序数组的中位数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#寻找两个升序数组的中位数\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 寻找两个升序数组的中位数\")]),e._v(\" \"),a(\"h2\",{attrs:{id:\"题目：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#题目：\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 题目：\")]),e._v(\" \"),a(\"div\",{staticClass:\"tip custom-block\"},[a(\"p\",{staticClass:\"custom-block-title\"},[e._v(\"Problem\")]),e._v(\" \"),a(\"p\",[e._v(\"DIFFICULTY：hard\")]),e._v(\" \"),a(\"p\",[e._v(\"There are two sorted arrays nums1 and nums2 of size m and n respectively.\")]),e._v(\" \"),a(\"p\",[e._v(\"Find the median of the two sorted arrays. The overall run time complexity\")]),e._v(\" \"),a(\"p\",[e._v(\"should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.\")]),e._v(\" \"),a(\"p\",[e._v(\"Example 1:\")]),e._v(\" \"),a(\"p\",[e._v(\"nums1 = [1, 3]\\nnums2 = [2]\")]),e._v(\" \"),a(\"p\",[e._v(\"The median is 2.0\\nExample 2:\")]),e._v(\" \"),a(\"p\",[e._v(\"nums1 = [1, 2]\\nnums2 = [3, 4]\")]),e._v(\" \"),a(\"p\",[e._v(\"The median is (2 + 3)/2 = 2.5\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分析\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 分析\")]),e._v(\" \"),a(\"p\",[e._v(\"在看到这道题目的时候我脑海里的第一反应是\\n\"),a(\"a\",{attrs:{href:\"https://en.wikipedia.org/wiki/K-way_merge_algorithm\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"多路外部并归排序\"),a(\"OutboundLink\")],1),e._v(\".\\n但是因为这里全部都是升序的数组，而且没有限制数列的大小，所以问题远没有那么复杂。\")]),e._v(\" \"),a(\"h4\",{attrs:{id:\"解法一：常规思路\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解法一：常规思路\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 解法一：常规思路\")]),e._v(\" \"),a(\"p\",[e._v(\"general intuition behind that solution in simple terms.\\n现有的思路是：\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"这里我们可以直接用实现并归排序的后半部分直接来融合这两个数组\")]),e._v(\" \"),a(\"li\",[e._v(\"然后我们再去寻找中位数\")])]),e._v(\" \"),a(\"p\",[e._v(\"这里我们直接用\"),a(\"a\",{attrs:{href:\"https://www.geeksforgeeks.org/merge-sort/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"并归排序\"),a(\"OutboundLink\")],1),e._v(\"「注：把关于\\n排序的博客也更新出来，然后链接到自己的博客」来直接合并这两个数组。\\n然后我们再直接求这组有序数组的中位数。\")]),e._v(\" \"),a(\"p\",[e._v(\"虽然这个方法看起来也是比较简单，但是运算时间是线性的。我们还可以进一步优化一下。因为我们这里是先排序，然后再进行查找。但是对于已经排序完毕的数组，我们并不需要知道后半部分的数据遍可以求出来中位数。因此，在我们常规思路中，第一部使用的并归有一半的步骤是多余的。\")]),e._v(\" \"),a(\"p\",[e._v(\"所以此方法经过改良以后便可以是并归一半数据，然后就求解中位数。不过此方法的运行时间依然是线性的。\")]),e._v(\" \"),a(\"h4\",{attrs:{id:\"解法二：二分查找\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解法二：二分查找\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 解法二：二分查找\")]),e._v(\" \"),a(\"p\",[e._v(\"在[LeetCode](https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2481/Share-my-O(log(min(mn))-solution-with-explanation)看到有人对中位数进行了统计学的定义。不过我感觉应该把原定义改进一下，变为*“将集合划分为两个相等长度的子集，一个子集内的总和总是\"),a(\"strong\",[e._v(\"大于等于\")]),e._v(\"另一个子集。”*\")]),e._v(\" \"),a(\"p\",[e._v(\"比如我们有两个数组(偶数情况)\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"A:[a, c, e, g]\\nB:[b, d, f, h]\\n\")])]),e._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),a(\"br\")])]),a(\"p\",[e._v(\"设想一下，不考虑其中一个数组的头或尾是中位数的情况，我们最后找到中位数时原来的两个数组会被分成四份。两份是已经合并的两个数组的部分，两份是剩下的两个数组的部分。此时，对于每个数组都有一个明显的分解线，而且每个分界线都有左右两个数据。\")]),e._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[e._v(\"A:[a, c | e, g]\\nB:[b, d | f, h]\\n\")])]),e._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),a(\"br\")])]),a(\"p\",[e._v(\"此时中位数等于\"),a(\"code\",[e._v(\"(max(c,d) + max(e,f))/2\")])]),e._v(\" \"),a(\"p\",[e._v(\"如果两个数组的总长度是奇数的话，\")]),e._v(\" \"),a(\"p\",[e._v(\"To be continue...\")]),e._v(\" \"),a(\"p\",[e._v(\"如果想看全部源码，请移步到作者的\"),a(\"a\",{attrs:{href:\"https://github.com/jinchenxiangdan/LeetCodeAnswers/blob/master/src/LeetCode4.java\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Github的LeetCode篇\"),a(\"OutboundLink\")],1),e._v(\".\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}