{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{203:function(a,s,e){\"use strict\";e.r(s);var n=e(0),t=Object(n.a)({},function(){var a=this,s=a.$createElement,e=a._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"寻找两个升序数组的中位数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#寻找两个升序数组的中位数\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 寻找两个升序数组的中位数\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"题目：\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#题目：\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 题目：\")]),a._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[a._v(\"There are two sorted arrays nums1 and nums2 of size m and n respectively.\\n\\nFind the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).\\n\\nYou may assume nums1 and nums2 cannot be both empty.\\n\\nExample 1:\\n\\nnums1 = [1, 3]\\nnums2 = [2]\\n\\nThe median is 2.0\\nExample 2:\\n\\nnums1 = [1, 2]\\nnums2 = [3, 4]\\n\\nThe median is (2 + 3)/2 = 2.5\\n\")])]),a._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[a._v(\"18\")]),e(\"br\")])]),e(\"h3\",{attrs:{id:\"分析\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分析\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 分析\")]),a._v(\" \"),e(\"p\",[a._v(\"在看到这道题目的时候我脑海里的第一反应是\"),e(\"a\",{attrs:{href:\"https://en.wikipedia.org/wiki/K-way_merge_algorithm\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"多路外部并归排序\"),e(\"OutboundLink\")],1),a._v(\". 但是因为这里全部都是升序的数组，而且没有限制数列的大小，所以问题远没有那么复杂。\")]),a._v(\" \"),e(\"p\",[a._v(\"现有的思路是：\")]),a._v(\" \"),e(\"ol\",[e(\"li\",[a._v(\"这里我们可以直接用并归排序的后半部分直接来融合这两个数组\")]),a._v(\" \"),e(\"li\",[a._v(\"然后我们再去寻找中位数\")])]),a._v(\" \"),e(\"h3\",{attrs:{id:\"解法一\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解法一\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 解法一\")]),a._v(\" \"),e(\"h3\",{attrs:{id:\"解法二\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解法二\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 解法二\")]),a._v(\" \"),e(\"p\",[a._v(\"如果想看全部源码，请移步到作者的\"),e(\"a\",{attrs:{href:\"https://github.com/jinchenxiangdan/LeetCodeAnswers/blob/master/src/LeetCode4.java\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"Github的LeetCode篇\"),e(\"OutboundLink\")],1),a._v(\".\")])])},[],!1,null,null,null);s.default=t.exports}}]);","extractedComments":[]}